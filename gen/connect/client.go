// Code generated by goa v3.1.3, DO NOT EDIT.
//
// connect client
//
// Command:
// $ goa gen github.com/wondenge/coop-go/design

package connect

import (
	"context"

	"github.com/go-kit/kit/endpoint"
)

// Client is the "connect" service client.
type Client struct {
	AccountBalanceEndpoint        endpoint.Endpoint
	AccountFullStatementEndpoint  endpoint.Endpoint
	AccountMiniStatementEndpoint  endpoint.Endpoint
	AccountTransactionsEndpoint   endpoint.Endpoint
	AccountValidationEndpoint     endpoint.Endpoint
	ExchangeRateEndpoint          endpoint.Endpoint
	IFTAccountToAccountEndpoint   endpoint.Endpoint
	INSSimulationEndpoint         endpoint.Endpoint
	PesaLinkSendToAccountEndpoint endpoint.Endpoint
	PesaLinkSendToPhoneEndpoint   endpoint.Endpoint
	SendToMPesaEndpoint           endpoint.Endpoint
	TransactionStatusEndpoint     endpoint.Endpoint
}

// NewClient initializes a "connect" service client given the endpoints.
func NewClient(accountBalance, accountFullStatement, accountMiniStatement, accountTransactions, accountValidation, exchangeRate, iFTAccountToAccount, iNSSimulation, pesaLinkSendToAccount, pesaLinkSendToPhone, sendToMPesa, transactionStatus endpoint.Endpoint) *Client {
	return &Client{
		AccountBalanceEndpoint:        accountBalance,
		AccountFullStatementEndpoint:  accountFullStatement,
		AccountMiniStatementEndpoint:  accountMiniStatement,
		AccountTransactionsEndpoint:   accountTransactions,
		AccountValidationEndpoint:     accountValidation,
		ExchangeRateEndpoint:          exchangeRate,
		IFTAccountToAccountEndpoint:   iFTAccountToAccount,
		INSSimulationEndpoint:         iNSSimulation,
		PesaLinkSendToAccountEndpoint: pesaLinkSendToAccount,
		PesaLinkSendToPhoneEndpoint:   pesaLinkSendToPhone,
		SendToMPesaEndpoint:           sendToMPesa,
		TransactionStatusEndpoint:     transactionStatus,
	}
}

// AccountBalance calls the "AccountBalance" endpoint of the "connect" service.
// AccountBalance may return the following errors:
//	- "bad_request" (type *ErrorResponse): Bad Request Error Response-Synchronous: -2=INVALID/MISSING PARAMETER, -8=ACCOUNT AUTHORIZATION FAILURE, -11=MESSAGE REFERENCE LONGER THAN ALLOWED LENGTH
//	- "unauthorized" (type *Missingcredentials): Unauthorized Error Response-Synchronous: 900901=Invalid credentials, 900902=Missing credentials
//	- "not_allowed" (type *goa.ServiceError): Method Not Allowed Error Response-Synchronous
//	- "timeout" (type *goa.ServiceError): Request Timeout Error Response-Synchronous: -4=REQUEST TIMED OUT
//	- error: internal error
func (c *Client) AccountBalance(ctx context.Context, p *AccountBalancePayload) (res *AccountBalanceSuccessResponse, err error) {
	var ires interface{}
	ires, err = c.AccountBalanceEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*AccountBalanceSuccessResponse), nil
}

// AccountFullStatement calls the "AccountFullStatement" endpoint of the
// "connect" service.
// AccountFullStatement may return the following errors:
//	- "bad_request" (type *ErrorResponse): Bad Request Error Response-Synchronous: -2=INVALID/MISSING PARAMETER, -6=Date Fornat, -8=ACCOUNT AUTHORIZATION FAILURE, -11=MESSAGE REFERENCE LONGER THAN ALLOWED LENGTH
//	- "unauthorized" (type *Missingcredentials): Unauthorized Error Response-Synchronous: 900901=Invalid credentials, 900902=Missing credentials
//	- "not_found" (type *NotFound): Not Found Error Response-Synchronous
//	- "not_allowed" (type *goa.ServiceError): Method Not Allowed Error Response-Synchronous
//	- "timeout" (type *goa.ServiceError): Request Timeout Error Response-Synchronous: -4=REQUEST TIMED OUT
//	- error: internal error
func (c *Client) AccountFullStatement(ctx context.Context, p *AccountFullStatementPayload) (res *AccountFullStatementSuccessResponse, err error) {
	var ires interface{}
	ires, err = c.AccountFullStatementEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*AccountFullStatementSuccessResponse), nil
}

// AccountMiniStatement calls the "AccountMiniStatement" endpoint of the
// "connect" service.
// AccountMiniStatement may return the following errors:
//	- "bad_request" (type *ErrorResponse): Bad Request Error Response-Synchronous: -2=INVALID/MISSING PARAMETER, -6=Date Fornat, -8=ACCOUNT AUTHORIZATION FAILURE, -11=MESSAGE REFERENCE LONGER THAN ALLOWED LENGTH
//	- "unauthorized" (type *Missingcredentials): Unauthorized Error Response-Synchronous: 900901=Invalid credentials, 900902=Missing credentials
//	- "not_found" (type *NotFound): Not Found Error Response-Synchronous
//	- "not_allowed" (type *goa.ServiceError): Method Not Allowed Error Response-Synchronous
//	- "timeout" (type *goa.ServiceError): Request Timeout Error Response-Synchronous: -4=REQUEST TIMED OUT
//	- error: internal error
func (c *Client) AccountMiniStatement(ctx context.Context, p *AccountMiniStatementPayload) (res *AccountMiniStatementSuccessResponse, err error) {
	var ires interface{}
	ires, err = c.AccountMiniStatementEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*AccountMiniStatementSuccessResponse), nil
}

// AccountTransactions calls the "AccountTransactions" endpoint of the
// "connect" service.
// AccountTransactions may return the following errors:
//	- "bad_request" (type *ErrorResponse): Bad Request Error Response-Synchronous: -2=INVALID/MISSING PARAMETER, -6=NO OF TRANSACTIONS IS LESS/GREATER THAN LIMIT ALLOWED, -8=ACCOUNT AUTHORIZATION FAILURE, -11=MESSAGE REFERENCE LONGER THAN ALLOWED LENGTH
//	- "unauthorized" (type *Missingcredentials): Unauthorized Error Response-Synchronous: 900901=Invalid credentials, 900902=Missing credentials
//	- "not_allowed" (type *goa.ServiceError): Method Not Allowed Error Response-Synchronous
//	- "timeout" (type *goa.ServiceError): Request Timeout Error Response-Synchronous: -4=REQUEST TIMED OUT
//	- error: internal error
func (c *Client) AccountTransactions(ctx context.Context, p *AccountTransactionsPayload) (res *AccountTransactionsSuccessResponse, err error) {
	var ires interface{}
	ires, err = c.AccountTransactionsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*AccountTransactionsSuccessResponse), nil
}

// AccountValidation calls the "AccountValidation" endpoint of the "connect"
// service.
// AccountValidation may return the following errors:
//	- "bad_request" (type *ErrorResponse): Bad Request Error Response-Synchronous: -2=INVALID/MISSING PARAMETER, -11=MESSAGE REFERENCE LONGER THAN ALLOWED LENGTH, -15=INVALID ACCOUNT NUMBER
//	- "unauthorized" (type *Missingcredentials): Unauthorized Error Response-Synchronous: 900901=Invalid credentials, 900902=Missing credentials
//	- "not_found" (type *NotFound): Not Found Error Response-Synchronous
//	- "not_allowed" (type *goa.ServiceError): Method Not Allowed Error Response-Synchronous
//	- "timeout" (type *goa.ServiceError): Request Timeout Error Response-Synchronous: -4=REQUEST TIMED OUT
//	- error: internal error
func (c *Client) AccountValidation(ctx context.Context, p *AccountValidationPayload) (res *AccountValidationSuccessResponse, err error) {
	var ires interface{}
	ires, err = c.AccountValidationEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*AccountValidationSuccessResponse), nil
}

// ExchangeRate calls the "ExchangeRate" endpoint of the "connect" service.
// ExchangeRate may return the following errors:
//	- "bad_request" (type *ErrorResponse): Bad Request Error Response-Synchronous: -2=INVALID/MISSING PARAMETER, -11=MESSAGE REFERENCE LONGER THAN ALLOWED LENGTH
//	- "unauthorized" (type *Missingcredentials): Unauthorized Error Response-Synchronous: 900901=Invalid credentials, 900902=Missing credentials
//	- "not_found" (type *NotFound): Not Found Error Response-Synchronous: -4=Record Not Found
//	- "not_allowed" (type *goa.ServiceError): Method Not Allowed Error Response-Synchronous
//	- "timeout" (type *goa.ServiceError): Request Timeout Error Response-Synchronous: -4=REQUEST TIMED OUT
//	- error: internal error
func (c *Client) ExchangeRate(ctx context.Context, p *ExchangeRatePayload) (res *ExchangeRateSuccessResponse, err error) {
	var ires interface{}
	ires, err = c.ExchangeRateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*ExchangeRateSuccessResponse), nil
}

// IFTAccountToAccount calls the "IFTAccountToAccount" endpoint of the
// "connect" service.
// IFTAccountToAccount may return the following errors:
//	- "bad_request" (type *AcknowledgementError400): Bad Request Error Response-Synchronous: <br>-2 - INVALID/MISSING PARAMETER, <br>-3 - THE AMOUNT DEBITED OR CREDITED MUST BE GREATER THAT 0/POSITIVE INTEGER, <br>-5 - DEBIT AND CREDIT(S) AMOUNTS NOT BALANCING, <br>-6 - TRANSACTION AMOUNT LESS/GREATER THAN MINIMUM/MAXIMUM LIMIT ALLOWED, <br>-11 - MESSAGE REFERENCE/REFERENCE NUMBER LONGER THAN ALLOWED LENGTH, <br>-12 - DUPLICATE REFERENCE/IDENTICAL REFERENCE AND MESSAGEREFERENCE
//	- "unauthorized" (type *Missingcredentials): Unauthorized Error Response-Synchronous: <br>900901 - Invalid credentials, <br>900902 - Missing credentials, <br>-8 - DEBIT ACCOUNT AUTHORIZATION FAILURE
//	- "forbidden" (type *AcknowledgementError403): Forbidden Error Response-Synchronous: <br>-9 - CURRENCY INVALID/NOT ALLOWED, <br>-16 - DAILY LIMIT EXHAUSTED
//	- "not_found" (type *NotFound): Not Found Error Response-Synchronous: <br>Wrong API Resource URI
//	- "not_allowed" (type *goa.ServiceError): Method Not Allowed Error Response-Synchronous
//	- "timeout" (type *goa.ServiceError): Request Timeout Error Response-Synchronous: <br>-4 - REQUEST TIMED OUT
//	- "conflict" (type *AcknowledgementError409): Conflict Error Response-Synchronous: <br>-1 - DUPLICATE MESSAGE REFERENCE
//	- error: internal error
func (c *Client) IFTAccountToAccount(ctx context.Context, p *IFTAccountToAccountTXNRequest) (res *SuccessAcknowledgement, err error) {
	var ires interface{}
	ires, err = c.IFTAccountToAccountEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SuccessAcknowledgement), nil
}

// INSSimulation calls the "INSSimulation" endpoint of the "connect" service.
// INSSimulation may return the following errors:
//	- "bad_request" (type *goa.ServiceError): Bad Request Error Response-Synchronous
//	- "unauthorized" (type *ErrorAcknowledgement): Unauthorized Error Response-Synchronous
//	- "not_allowed" (type *goa.ServiceError): Method Not Allowed Error Response-Synchronous
//	- "timeout" (type *goa.ServiceError): Request Timeout Error Response-Synchronous
//	- error: internal error
func (c *Client) INSSimulation(ctx context.Context, p *INSTransactionSimulationRequest) (res *SuccessAcknowledgement, err error) {
	var ires interface{}
	ires, err = c.INSSimulationEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SuccessAcknowledgement), nil
}

// PesaLinkSendToAccount calls the "PesaLinkSendToAccount" endpoint of the
// "connect" service.
// PesaLinkSendToAccount may return the following errors:
//	- "bad_request" (type *AcknowledgementError400): Bad Request Error Response-Synchronous: <br>-2 - INVALID/MISSING PARAMETER, <br>-3 - THE AMOUNT DEBITED OR CREDITED MUST BE GREATER THAT 0/POSITIVE INTEGER, <br>-5 - DEBIT AND CREDIT(S) AMOUNTS NOT BALANCING, <br>-6 - TRANSACTION AMOUNT LESS/GREATER THAN MINIMUM/MAXIMUM LIMIT ALLOWED, <br>-11 - MESSAGE REFERENCE/REFERENCE NUMBER LONGER THAN ALLOWED LENGTH, <br>-12 - DUPLICATE REFERENCE/IDENTICAL REFERENCE AND MESSAGEREFERENCE
//	- "unauthorized" (type *Missingcredentials): Unauthorized Error Response-Synchronous: <br>900901 - Invalid credentials, <br>900902 - Missing credentials, <br>-8 - DEBIT ACCOUNT AUTHORIZATION FAILURE
//	- "forbidden" (type *AcknowledgementError403): Forbidden Error Response-Synchronous: <br>-9 - CURRENCY INVALID/NOT ALLOWED, <br>-10 - BANK CODE INVALID/NOT PESALINK MEMBER BANK, <br>-16 - DAILY LIMIT EXHAUSTED
//	- "not_found" (type *NotFound): Not Found Error Response-Synchronous: <br>Wrong API Resource URI
//	- "not_allowed" (type *goa.ServiceError): Method Not Allowed Error Response-Synchronous
//	- "timeout" (type *goa.ServiceError): Request Timeout Error Response-Synchronous: <br>-4 - REQUEST TIMED OUT
//	- "conflict" (type *AcknowledgementError409): Conflict Error Response-Synchronous: <br>-1 - DUPLICATE MESSAGE REFERENCE
//	- error: internal error
func (c *Client) PesaLinkSendToAccount(ctx context.Context, p *PesaLinkSendToAccountTransactionRequest) (res *SuccessAcknowledgement, err error) {
	var ires interface{}
	ires, err = c.PesaLinkSendToAccountEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SuccessAcknowledgement), nil
}

// PesaLinkSendToPhone calls the "PesaLinkSendToPhone" endpoint of the
// "connect" service.
// PesaLinkSendToPhone may return the following errors:
//	- "bad_request" (type *AcknowledgementError400): Bad Request Error Response-Synchronous: <br>-2 - INVALID/MISSING PARAMETER, <br>-3 - THE AMOUNT DEBITED OR CREDITED MUST BE GREATER THAT 0/POSITIVE INTEGER, <br>-5 - DEBIT AND CREDIT(S) AMOUNTS NOT BALANCING, <br>-6 - TRANSACTION AMOUNT LESS/GREATER THAN MINIMUM/MAXIMUM LIMIT ALLOWED, <br>-11 - MESSAGE REFERENCE/REFERENCE NUMBER LONGER THAN ALLOWED LENGTH, <br>-12 - DUPLICATE REFERENCE/IDENTICAL REFERENCE AND MESSAGEREFERENCE, <br>-20 - INVALID PHONE NUMBER
//	- "unauthorized" (type *Missingcredentials): Unauthorized Error Response-Synchronous: <br>900901 - Invalid credentials, <br>900902 - Missing credentials, <br>-8 - DEBIT ACCOUNT AUTHORIZATION FAILURE
//	- "forbidden" (type *AcknowledgementError403): Forbidden Error Response-Synchronous: <br>-9 - CURRENCY INVALID/NOT ALLOWED, <br>-10 - BANK CODE INVALID/NOT PESALINK MEMBER BANK, <br>-16 - DAILY LIMIT EXHAUSTED
//	- "not_found" (type *NotFound): Not Found Error Response-Synchronous: <br>Wrong API Resource URI
//	- "not_allowed" (type *goa.ServiceError): Method Not Allowed Error Response-Synchronous
//	- "timeout" (type *goa.ServiceError): Request Timeout Error Response-Synchronous: <br>-4 - REQUEST TIMED OUT
//	- "conflict" (type *AcknowledgementError409): Conflict Error Response-Synchronous: <br>-1 - DUPLICATE MESSAGE REFERENCE
//	- error: internal error
func (c *Client) PesaLinkSendToPhone(ctx context.Context, p *PesaLinkSendToPhoneTransactionRequest) (res *SuccessAcknowledgement, err error) {
	var ires interface{}
	ires, err = c.PesaLinkSendToPhoneEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SuccessAcknowledgement), nil
}

// SendToMPesa calls the "SendToMPesa" endpoint of the "connect" service.
// SendToMPesa may return the following errors:
//	- "bad_request" (type *AcknowledgementError400): Bad Request Error Response-Synchronous: <br>-2: INVALID/MISSING PARAMETER, <br>-3: THE AMOUNT DEBITED OR CREDITED MUST BE GREATER THAT 0/POSITIVE INTEGER, <br>-5: DEBIT AND CREDIT(S) AMOUNTS NOT BALANCING, <br>-6: TRANSACTION AMOUNT LESS/GREATER THAN MINIMUM/MAXIMUM LIMIT ALLOWED, <br>-11: MESSAGE REFERENCE/REFERENCE NUMBER LONGER THAN ALLOWED LENGTH, <br>-12: DUPLICATE REFERENCE/IDENTICAL REFERENCE AND MESSAGEREFERENCE, <br>-19: INVALID M-PESA NUMBER
//	- "unauthorized" (type *Missingcredentials): Unauthorized Error Response-Synchronous: <br>900901: Invalid credentials, <br>900902: Missing credentials, <br>-8: DEBIT ACCOUNT AUTHORIZATION FAILURE
//	- "forbidden" (type *AcknowledgementError403): Forbidden Error Response-Synchronous: <br>-9: CURRENCY INVALID/NOT ALLOWED, <br>-16: DAILY LIMIT EXHAUSTED
//	- "not_found" (type *NotFound): Not Found Error Response-Synchronous: <br>Wrong API Resource URI
//	- "not_allowed" (type *goa.ServiceError): Method Not Allowed Error Response-Synchronous
//	- "timeout" (type *goa.ServiceError): Request Timeout Error Response-Synchronous: <br>-4: REQUEST TIMED OUT
//	- "conflict" (type *AcknowledgementError409): Conflict Error Response-Synchronous: <br>-1: DUPLICATE MESSAGE REFERENCE
//	- error: internal error
func (c *Client) SendToMPesa(ctx context.Context, p *SendToMpesaTransactionRequest) (res *SuccessAcknowledgement, err error) {
	var ires interface{}
	ires, err = c.SendToMPesaEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SuccessAcknowledgement), nil
}

// TransactionStatus calls the "TransactionStatus" endpoint of the "connect"
// service.
// TransactionStatus may return the following errors:
//	- "bad_request" (type *ErrorResponse): Bad Request Error Response-Synchronous: <br>-2 - INVALID/MISSING PARAMETER, <br>-11 - MESSAGE REFERENCE LONGER THAN ALLOWED LENGTH
//	- "unauthorized" (type *Missingcredentials): Unauthorized Error Response-Synchronous: <br>900901 - Invalid credentials, <br>900902 - Missing credentials
//	- "not_found" (type *NotFound): Not Found Error Response-Synchronous: <br>-13 - MESSAGE REFERENCE DOES NOT EXIST, <br>Wrong API Resource URI
//	- "not_allowed" (type *goa.ServiceError): Method Not Allowed Error Response-Synchronous
//	- "timeout" (type *goa.ServiceError): Request Timeout Error Response-Synchronous: <br>-4 - REQUEST TIMED OUT
//	- error: internal error
func (c *Client) TransactionStatus(ctx context.Context, p *FTTransactionStatusPayload) (res *SuccessResponse, err error) {
	var ires interface{}
	ires, err = c.TransactionStatusEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SuccessResponse), nil
}
